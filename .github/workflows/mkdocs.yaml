name: Documentation

on:
  push:
    branches:
      - main
    paths:
      - "docs/*"
      - "**.md"
      - "mkdocs.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: cp proto/apidocs.swagger.json docs/reference/apidocs.json
      - run: pip install mkdocs-material
      - run: pip install mkdocs-git-revision-date-plugin
      - run: pip install mkdocs-render-swagger-plugin
      - run: pip install mkdocs-mermaid2-plugin
      - run: git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Publish docs
        run: mkdocs gh-deploy --force
  update-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Update Gitlab Documentation
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_USER: ${{ secrets.GITLAB_USER }}
        GITLAB_EMAIL: ${{ secrets.GITLAB_EMAIL }}
        GITLAB_DOCS_REPO_URL: ${{ secrets.GITLAB_DOCS_REPO_URL }}
      run: |
        GL_BRANCH_NAME="main"
        cd ..

        # Clone using service account credentials with HTTPS URL
        git clone "https://${GITLAB_USER}:${GITLAB_TOKEN}@${GITLAB_DOCS_REPO_URL}" gitlab-docs
        cd gitlab-docs

        # Configure git with service account identity
        git config user.name "${GITLAB_USER}"
        git config user.email "${GITLAB_EMAIL}"

        # Copy everything under docs/ directory while preserving directory structure
        rsync -av ../maestro/docs/ ./

        # Check if there are any changes to commit
        if git diff --quiet && git diff --cached --quiet; then
          echo "No changes to documentation files, skipping push"
          exit 0
        fi

        # Create branch and commit changes
        git add .
        git commit -m "Auto-update documentation from GitHub (SHA: ${GITHUB_SHA:0:7})" -m "Triggered by: $GITHUB_ACTOR"
        git push origin $GL_BRANCH_NAME

        echo "Documentation updated and pushed to branch: $GL_BRANCH_NAME"

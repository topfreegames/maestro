// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package metricsreporter

import (
	"github.com/google/wire"
	"github.com/topfreegames/maestro/internal/config"
	"github.com/topfreegames/maestro/internal/core/services/workers"
	"github.com/topfreegames/maestro/internal/core/worker"
	config2 "github.com/topfreegames/maestro/internal/core/worker/config"
	"github.com/topfreegames/maestro/internal/core/worker/metricsreporter"
	"github.com/topfreegames/maestro/internal/service"
)

// Injectors from wire.go:

func initializeMetricsReporter(c config.Config) (*workers.WorkersManager, error) {
	workerBuilder := provideMetricsReporterBuilder()
	schedulerStorage, err := service.NewSchedulerStoragePg(c)
	if err != nil {
		return nil, err
	}
	roomStorage, err := service.NewRoomStorageRedis(c)
	if err != nil {
		return nil, err
	}
	gameRoomInstanceStorage, err := service.NewGameRoomInstanceStorageRedis(c)
	if err != nil {
		return nil, err
	}
	metricsReporterConfig := provideMetricsReporterConfig(c)
	workerOptions := &worker.WorkerOptions{
		RoomStorage:           roomStorage,
		InstanceStorage:       gameRoomInstanceStorage,
		MetricsReporterConfig: metricsReporterConfig,
	}
	workersManager := workers.NewWorkersManager(workerBuilder, c, schedulerStorage, workerOptions)
	return workersManager, nil
}

// wire.go:

func provideMetricsReporterBuilder() *worker.WorkerBuilder {
	return &worker.WorkerBuilder{
		Func:          metricsreporter.NewMetricsReporterWorker,
		ComponentName: metricsreporter.WorkerName,
	}
}

func provideMetricsReporterConfig(c config.Config) *config2.MetricsReporterConfig {
	return &config2.MetricsReporterConfig{MetricsReporterIntervalMillis: c.GetDuration("reporter.metrics.intervalMillis")}

}

var WorkerOptionsSet = wire.NewSet(service.NewRoomStorageRedis, service.NewGameRoomInstanceStorageRedis, provideMetricsReporterConfig, wire.Struct(new(worker.WorkerOptions), "RoomStorage", "InstanceStorage", "MetricsReporterConfig"))

name: maestro
services:
  management-api:
    build:
      context: ../../..
      dockerfile: ./e2e/framework/maestro/Dockerfile
    environment:
      - MAESTRO_ADAPTERS_ROOMSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_SCHEDULERSTORAGE_POSTGRES_URL=postgres://maestro:maestro@postgres:5432/maestro?sslmode=disable
      - MAESTRO_ADAPTERS_OPERATIONFLOW_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_OPERATIONSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_OPERATIONLEASESTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_INTERNALAPI_PORT=8081
      - MAESTRO_API_PORT=8080
    ports:
      - "8080:8080"
      - "8081:8081"
    command: [start, management-api, -l, development]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  rooms-api:
    build:
      context: ../../..
      dockerfile: ./e2e/framework/maestro/Dockerfile
    environment:
      - MAESTRO_ADAPTERS_ROOMSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_INSTANCESTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_RUNTIME_KUBERNETES_KUBECONFIG=/kubeconfig/config
      - MAESTRO_ADAPTERS_SCHEDULERCACHE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_SCHEDULERSTORAGE_POSTGRES_URL=postgres://maestro:maestro@postgres:5432/maestro?sslmode=disable
      - MAESTRO_INTERNALAPI_PORT=8071
      - MAESTRO_API_PORT=8070
    ports:
      - "8070:8070"
      - "8071:8071"
    volumes:
      - ./.k3d-kubeconfig.yaml:/kubeconfig/config:ro
    command: [start, rooms-api, -l, development]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  runtime-watcher:
    build:
      context: ../../..
      dockerfile: ./e2e/framework/maestro/Dockerfile
    environment:
      - MAESTRO_ADAPTERS_SCHEDULERSTORAGE_POSTGRES_URL=postgres://maestro:maestro@postgres:5432/maestro?sslmode=disable
      - MAESTRO_ADAPTERS_ROOMSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_INSTANCESTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_RUNTIME_KUBERNETES_KUBECONFIG=/kubeconfig/config
      - MAESTRO_ADAPTERS_SCHEDULERCACHE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_INTERNALAPI_PORT=8061
    ports:
      - "8061:8061"
    volumes:
      - ./.k3d-kubeconfig.yaml:/kubeconfig/config:ro
    command: [start, runtime-watcher, -l, development]

  worker:
    build:
      context: ../../..
      dockerfile: ./e2e/framework/maestro/Dockerfile
    environment:
      - MAESTRO_ADAPTERS_SCHEDULERSTORAGE_POSTGRES_URL=postgres://maestro:maestro@postgres:5432/maestro?sslmode=disable
      - MAESTRO_ADAPTERS_OPERATIONFLOW_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_OPERATIONSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_ROOMSTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_OPERATIONLEASESTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_INSTANCESTORAGE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_ADAPTERS_RUNTIME_KUBERNETES_KUBECONFIG=/kubeconfig/config
      - MAESTRO_ADAPTERS_RUNTIME_KUBERNETES_TOPOLOGYSPREADCONSTRAINT_ENABLED=false
      - MAESTRO_ADAPTERS_SCHEDULERCACHE_REDIS_URL=redis://redis:6379/0
      - MAESTRO_INTERNALAPI_PORT=8051
      - MAESTRO_WORKERS_HEALTHCONTROLLERINTERVAL=5s
      - MAESTRO_WORKERS_STORAGECLENUPINTERVAL=5s
    ports:
      - "8051:8051"
    volumes:
      - ./.k3d-kubeconfig.yaml:/kubeconfig/config:ro
    command: [start, worker, -l, development]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    ports:
    - "5432:5432"
    environment:
    - POSTGRES_DB=maestro
    - POSTGRES_USER=maestro
    - POSTGRES_PASSWORD=maestro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:8.0-alpine
    ports:
    - "6379:6379"
    healthcheck:
      test:  [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  eventsproto: {}

extensions:
  pg:
    host: "localhost"
    port: 8585
    user: "maestro_test"
    pass: ""
    poolSize: 20
    maxRetries: 3
    database: "maestro_test"
    connectionTimeout: 100
  redis:
    url: redis://localhost:6333
    connectionTimeout: 200
  kubernetesClient:
    timeout: 1s
    burst: 300
    qps: 300
william:
  enabled: false
  url: http://localhost:3000
  region: us
  iamName: maestro
  checkTimeout: 1s
watcher:
  autoScalingPeriod: 10
  roomsStatusesReportPeriod: 10
  lockKey: "maestro-lock-key"
  lockTimeoutMs: 180000
  gracefulShutdownTimeout: 300
  maxSurge: 25
worker:
  syncPeriod: 10
  gracefulShutdownTimeout: 300
  getLocksTimeout: 300
reporters:
  dogstatsd:
    host: "0.0.0.0:8125"
    prefix: "test."
    region: "test"
  http:
    timeout: "5s"
    putURL: "http://localhost:8080"
    region: "test"
scaleUpTimeoutSeconds: 300
scaleDownTimeoutSeconds: 300
deleteTimeoutSeconds: 300
pingTimeout: 300
updateTimeoutSeconds: 300
addrGetter:
  cache:
    use: false
newrelic:
  app: maestro
  key: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
oauth:
  enabled: true
  acceptedDomains: 
  - "example.com"
  - "other.com"
basicauth:
  username: user
  password: pass
  tryOauthIfUnset: true
schedulerCache:
  defaultExpiration: 5m
  cleanupInterval: 10m
schedulers:
  versions:
    toKeep: 10
users:
  admin: user@example.com
api:
  gracefulShutdownTimeout: 30s
  limitManager:
    keyTimeout: 1m
ipv6KubernetesLabelKey: "test.io/ipv6"

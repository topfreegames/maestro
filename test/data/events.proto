syntax = "proto3";

package eventforwarder;

option go_package = "github.com/topfreegames/protos/blob/master/maestro/grpc/protobuf";


service GRPCForwarder {
  rpc SendRoomInfo(RoomInfo) returns (Response) {}
  rpc SendRoomStatus(RoomStatus) returns (Response) {}
  rpc SendRoomPing(Room) returns (Response) {}
  rpc SendRoomResync(RoomStatus) returns (Response) {}
  rpc SendRoomEvent(RoomEvent) returns (Response) {}
  rpc SendPlayerEvent(PlayerEvent) returns (Response) {}
}

message RoomEvent {
  Room room = 1;
  string eventType = 2;
  map<string, string> metadata = 3;
}

message RoomStatus {
  Room room = 1;
  RoomStatusType statusType = 2;
  enum RoomStatusType {
    ready = 0;
    occupied = 1;
    terminating = 2;
    terminated = 3;
  }
}

message Room {
  string game = 1;
  string roomId = 2;
  string host = 4;
  int32 port = 5;
  map<string, string> metadata = 6;
  string roomType = 7;
}

message PlayerEvent {
  string playerId = 1;
  Room room = 2;
  PlayerEventType eventType = 3;
  map<string, string> metadata = 4;
  enum PlayerEventType {
    PLAYER_JOINED = 0;
    PLAYER_LEFT = 1;
  }
}

message RoomInfo {
  string roomType = 1;
  string game = 2;
  int32 numberOfTeams = 3;
  int32 playersPerTeam = 4;
  int32 minimumNumberOfPlayers = 5;
  string matchmakingScript = 6;
  string webhookUrl = 7;
  map<string, string> metadata = 8;
  map<string, string> tags = 9;
}

message Response {
  int32 code = 1;
  string message = 2;
}

syntax = "proto3";

package api.v1;

option java_package = "com.topfreegames.maestro.pkg.api.v1";
option go_package = "github.com/topfreegames/maestro/pkg/api/v1";

import "google/api/annotations.proto";
import "api/v1/messages.proto";

// Service that deals with scheduler operations.
service OperationsService {
  // List operations based on a scheduler.
  rpc ListOperations(ListOperationsRequest) returns (ListOperationsResponse) {
    option (google.api.http) = {
      get: "/schedulers/{scheduler_name=*}/operations",
    };
  }
  // Cancel operation based on scheduler name and operation ID
  rpc CancelOperation(CancelOperationRequest) returns (CancelOperationResponse) {
    option (google.api.http) = {
      post: "/schedulers/{scheduler_name=*}/operations/{operation_id=*}/cancel",
    };
  }

  // Get operation based on scheduler name and operation ID
  rpc GetOperation(GetOperationRequest) returns (GetOperationResponse) {
    option (google.api.http) = {
      get: "/schedulers/{scheduler_name=*}/operations/{operation_id=*}",
    };
  }
}

// The list operation route request.
message ListOperationsRequest {
  // Scheduler name that the operations are part of.
  // NOTE: On http protocol, this operates as a path param.
  string scheduler_name = 1;
  // Optional parameter for enabling operations sorting.
  // General `order_by` string syntax: <field> (<asc|desc>)
  // Default value is `created_at desc`
  // NOTE: On http protocol, this operates as a query parameter.
  string order_by = 2;
  // Optional parameter for enabling filter by operation status
  optional string status = 3;
}

// The list operation route response/reply
// There's a list for each operation major status
message ListOperationsResponse {
  // List of the scheduler pending operations.
  repeated ListOperationItem pending_operations = 1;
  // List of the scheduler active operations.
  repeated ListOperationItem active_operations = 2;
  // List of the scheduler finished (with error or not) operations.
  repeated ListOperationItem finished_operations = 3;
}

// The cancel operation request.
message CancelOperationRequest {
  // Scheduler name where the operation relies on.
  string scheduler_name = 1;
  // Operation identifier to be canceled.
  string operation_id = 2;
}

// Empty response of the cancel operation request.
message CancelOperationResponse {}

// The get operation route request.
message GetOperationRequest {
  // Scheduler name that the operations are part of.
  // NOTE: On http protocol, this operates as a path param.
  string scheduler_name = 1;
  // ID of the requested operation.
  // NOTE: On http protocol, this operates as a path param.
  string operation_id = 2;
}

// The get operation route response/reply
message GetOperationResponse {
  // Operation requested.
  Operation operation = 1;
}
